{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","attachmentUrl","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","onFileChange","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","maxLength","for","faPlus","accept","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","key","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04063943.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\"; \r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n\r\n//export default firebase.initializeApp(firebaseConfig);\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst inputStyles = {};\r\n\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\" className=\"authInput authSubmit\" \r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n         {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;","import { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () =>{ \r\n    \r\n    const onSocialClick = async(event) => {\r\n        const {\r\n            target : {name},\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if(name ===\"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n\r\n    };\r\n    // input 태그 안의 onchange 속성은 값이 바뀔때마다 onChange 함수를 호출한다는 것을 의미한다.\r\n    //또한 value는 state 에 저장이 된다. input의 값이 바뀔때마다 state의 값도 변화하는것.\r\n    return(\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n            icon={faTwitter}\r\n            color={\"#04AAFF\"}\r\n            size=\"3x\"\r\n            style={{ marginBottom: 30 }}\r\n            />    \r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj,isOwner,attachmentUrl}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet,setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick= async() => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if (ok){\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit =async (event) =>{\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text:newNweet,\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) =>{\r\n        const{\r\n            target : {value},\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ?  (\r\n                    <>\r\n                        <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                            <input type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} required  autoFocus onChange={onChange} className=\"formInput\"/>\r\n                            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                        </form> \r\n                        <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                            Cancel\r\n                        </span>\r\n                    </>\r\n                    ) : (  \r\n                    <> \r\n                        <h4>{nweetObj.text}</h4>\r\n                        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                        {isOwner && (\r\n                            <div class=\"nweet__actions\">\r\n                                <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </span>\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </span>\r\n                            </div>\r\n                        )} \r\n                    </>\r\n                    )}\r\n        </div>\r\n     );\r\n};\r\n\r\nexport default Nweet;","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    if (nweet === \"\") {\r\n        return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n      <input type=\"submit\" value=\"Nweet\" />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n            <img\r\n            src={attachment}\r\n            style={{\r\n                backgroundImage: attachment,\r\n            }}\r\n            />\r\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                <span>Remove</span>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default NweetFactory;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n    \r\n    const [nweets, setNweets] = useState([]);\r\n   \r\n    //옛날 방식이라 다른 방식으로 기능 구현. 이런 방식으로도 할 수 있다는것을 확인하기 위한 코드...\r\n    // const getNweets = async() => {\r\n    //     const dbNweets = await dbService.collection(\"nweets\").get();\r\n    //     dbNweets.forEach((document) =>{\r\n    //         const nweetObject = {\r\n    //             ...document.data(),\r\n    //             id: document.id,\r\n    \r\n    //         };\r\n    //         setNweets((prev) =>[nweetObject, ...prev]);\r\n    //     });\r\n    // };\r\n    useEffect(() => {\r\n    //    getNweets();\r\n    // 아래방식은 위의 foreach 방식에 비해 re-render 하지 않는 차이가 있다.\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const nweetArray = snapshot.docs.map((doc) => ({\r\n                id : doc.id, \r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n        \r\n    }, []);\r\n    \r\n    return(\r\n        <div className=\"container\">\r\n           <NweetFactory userObj={userObj} />\r\n           <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Home;","import React,{ useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default({refreshUser,userObj}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName,setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick= () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n  \r\n\r\n    const onChange = (event) => {\r\n        const{\r\n            target: {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async(event) =>{\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName : newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n    return (\r\n       \r\n        <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n            <input onChange={onChange} type=\"text\" placeholder=\"Display name\" value={newDisplayName} autoFocus className=\"formInput\"/>\r\n            <input\r\n            type=\"submit\"\r\n            value=\"Update Profile\"\r\n            className=\"formBtn\"\r\n            style={{\r\n                marginTop: 10,\r\n            }}/>\r\n        </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n        \r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) => \r\n<nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n            <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        <li>\r\n            <Link\r\n            to=\"/profile\"\r\n            style={{\r\n                marginLeft: 10,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                fontSize: 12,\r\n            }}\r\n            >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n                {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n            </Link>\r\n        </li>\r\n    </ul>\r\n</nav>;\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({refreshUser,isLoggedIn,userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}  \r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n          style={{\r\n            maxWidth: 890,\r\n            width: \"100%\",\r\n            margin: \"0 auto\",\r\n            marginTop: 80,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj}/>\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n                <Auth />\r\n            </Route>\r\n          </>  \r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init , setInit] = useState(false);\n const [userObj, setUserObj] = useState(null);\n  useEffect(()  => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        setUserObj({\n         displayName: user.displayName,\n         uid: user.uid,\n         updateProfile: (args) =>user.updateProfile(args), \n          \n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () =>{\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) =>user.updateProfile(args), \n       \n     });\n\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj}/> \n      ):( \n        \"Initializing.... \"\n      )}\n     \n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n//import firebase from \"firebase\";\nimport 'styles.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}